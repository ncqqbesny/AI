<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soft.mapp.basecenter.dao.ITaskDao" >
  <resultMap id="BaseResultMap" type="com.soft.mapp.basecenter.domain.task.OrdersPo" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="req_code" property="reqCode" jdbcType="VARCHAR" />
    <result column="job_id" property="taskJobId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="VARCHAR" />
    <result column="from" property="from" jdbcType="VARCHAR" />
    <result column="to" property="to" jdbcType="VARCHAR" />
    <result column="is_drop" property="isDrop" jdbcType="VARCHAR" />
    <result column="is_last_order" property="isLastOrder" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="VARCHAR" /> 
    <result column="job_status" property="jobStatus" jdbcType="VARCHAR" /> 
    <result column="car_no" property="carNo" jdbcType="VARCHAR" /> 
    <result column="is_has_job_id" property="hasJobID" jdbcType="BIT" />
    <result column="task_id" property="taskID" jdbcType="VARCHAR" /> 
    <result column="task_time" property="taskTime" jdbcType="BIGINT" /> 
    <result column="job_id_agv" property="jobIDAGV" jdbcType="VARCHAR" /> 
    <result column="agv_id" property="agvID" jdbcType="VARCHAR" />       
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
    <!-- 用来记录分页查询时的所有数据量，避免出现分页查询时需要查询两次 -->
    <resultMap type="java.lang.Long" id="taskCount">
    <result column="total"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and  ${criterion.condition}
                                </when>
                                <when test="criterion.noInfo">
                                    ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
  <sql id="Base_Column_List" >
    id,
      parent_id, 
      req_code,
      job_id,
      order_id,
      order_type,
	  `FROM` ,
	  `TO` ,	 
      is_drop,
      is_last_order,
	  priority,
	  job_status,
      car_no,
      is_has_job_id,
      task_id,
      task_time,
      job_id_agv, 
      agv_id,
      create_time, 
      update_time 
  </sql>
    <select id="getOrderId"  resultType="java.lang.Long">
       SELECT NEXTVAL('jobSeq')
    </select>
    <select id="getPageInfo" parameterType="com.soft.mapp.basecenter.domain.task.TaskQuery" resultMap="BaseResultMap,taskCount">
        select
        <if test="distinct">
            distinct
        </if>
         SQL_CALC_FOUND_ROWS
        <include refid="Base_Column_List" />
        from task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="pageNumAndSize != null">
            LIMIT ${pageNumAndSize}
        </if>
        ;
        SELECT count(1) AS total from task;
    </select>
    <insert id="addInfo" parameterType="com.soft.mapp.basecenter.domain.task.OrdersPo">
        <selectKey keyProperty="id" keyColumn="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT NEXTVAL('taskSeq') id
        </selectKey>
        insert into task (parent_id,req_code, job_id, order_id,
        order_type, `from`, `to`,is_drop,
        is_last_order, priority, job_status, car_no,
        is_has_job_id,   task_id,      task_time,      job_id_agv,   
        agv_id,create_time)
        values (#{parentId,jdbcType=INTEGER},#{reqCode,jdbcType=VARCHAR}, #{taskJobId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR},
        #{orderType,jdbcType=VARCHAR}, #{from,jdbcType=VARCHAR},#{to,jdbcType=VARCHAR},#{isDrop,jdbcType=VARCHAR},
        #{isLastOrder,jdbcType=VARCHAR}, #{priority,jdbcType=VARCHAR},#{jobStatus,jdbcType=VARCHAR},#{carNo,jdbcType=VARCHAR},
        #{hasJobID,jdbcType=BIT}, #{taskID,jdbcType=VARCHAR},#{taskTime,jdbcType=BIGINT},#{jobIDAGV,jdbcType=VARCHAR},
        #{agvID,jdbcType=VARCHAR},NOW())
    </insert>
    <update id="updateByExampleSelective" parameterType="map">
        update task
        <set>
            <if test="record != null and record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record != null and record.reqCode != null">
                req_code = #{record.reqCode,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.taskJobId != null">
                job_id = #{record.taskJobId,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.orderId != null">
                order_id = #{record.orderId,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.orderType != null">
                order_type = #{record.orderType,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.from != null">
                `from` = #{record.from,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.to != null">
                `to` = #{record.to,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.isDrop != null">
                is_drop = #{record.isDrop,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.isLastOrder != null">
                is_last_order = #{record.isLastOrder,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.priority != null">
                priority = #{record.priority,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.jobStatus != null">
                job_status = #{record.jobStatus,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.carNo != null">
                car_no = #{record.carNo,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.hasJobID != null">
                is_has_job_id = #{record.hasJobID,jdbcType=BIT},
            </if>
             <if test="record != null and record.taskID != null">
                task_id = #{record.taskID,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.taskTime != null">
                task_time = #{record.taskTime,jdbcType=BIGINT},
            </if>
             <if test="record != null and record.jobIDAGV != null">
                job_id_agv = #{record.jobIDAGV,jdbcType=VARCHAR},
            </if>
             <if test="record != null and record.agvID != null">
                agv_id = #{record.agvID,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <delete id="deleteByExample" parameterType="com.soft.mapp.basecenter.domain.task.TaskQuery">
        delete from task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
  <select id="selectByReqCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from task
    where req_Code = #{reqCode,jdbcType=VARCHAR }
  </select>
  <select id="findByRoleName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from Task
    where role_name = #{role_name,jdbcType=VARCHAR }
  </select>
    <select id="findList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from task
  </select>  
</mapper>