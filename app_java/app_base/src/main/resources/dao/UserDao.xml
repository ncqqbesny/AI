<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soft.mapp.basecenter.dao.IUserDao">
    <resultMap id="BaseResultMap" type="com.soft.mapp.basecenter.domain.loginVo.User">
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="VARCHAR"/>
        <result column="m_id" property="mId" jdbcType="VARCHAR"/>
        <result column="open_id" property="openId" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="wx_headurl" property="wxHeadurl" jdbcType="VARCHAR"/>
        <result column="unionid" property="unionid" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="user_status" property="userStatus" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseResultMapDTO" type="com.soft.mapp.basecenter.domain.loginVo.UserDTO">
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="VARCHAR"/>
        <result column="m_id" property="mId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="user_status" property="userStatus" jdbcType="VARCHAR"/>
        <result column="open_id" property="openId" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="wx_headurl" property="wxHeadurl" jdbcType="VARCHAR"/>
        <result column="unionid" property="unionid" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <!-- 用来记录分页查询时的所有数据量，避免出现分页查询时需要查询两次 -->
    <resultMap type="java.lang.Long" id="userCount">
        <result column="total"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.noInfo">
                                    ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id
        , username, password,m_id,user_type,open_id,nick_name,wx_headurl,unionid
    </sql>
    <sql id="Expend_Column_List">
        m_id,open_id,nick_name,wx_headurl
        , name,user_status,email, telephone,create_time,update_time
    </sql>
    <select id="getPageUser" parameterType="com.soft.mapp.basecenter.domain.loginVo.UserQuery"
            resultMap="BaseResultMapDTO,userCount">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Expend_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="pageNumAndSize != null">
            LIMIT ${pageNumAndSize}
        </if>
        ;
        SELECT count(1) AS total from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>;
    </select>
    <insert id="addUser" parameterType="com.soft.mapp.basecenter.domain.loginVo.UserDTO" keyProperty="userId"
            useGeneratedKeys="true">
        <selectKey keyProperty="userId" keyColumn="user_id" order="BEFORE" resultType="java.lang.Integer">
            SELECT NEXTVAL('userSeq') AS userId;
        </selectKey>
        insert into user (user_id,m_id, username, password,
        name, user_status,email, telephone, create_time,user_type
        ,open_id,nick_name,wx_headurl,unionid,remark)
        values (#{userId,jdbcType=INTEGER},#{mId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{telephone,jdbcType=VARCHAR},NOW(),#{userType,jdbcType=VARCHAR},
        #{openId,jdbcType=VARCHAR},#{nickName,jdbcType=VARCHAR},#{wxHeadurl,jdbcType=VARCHAR},#{unionid,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record != null and record.mId != null">
                m_id = #{record.mId,jdbcType=INTEGER},
            </if>
            <if test="record != null and record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.userStatus != null">
                user_status = #{record.userStatus,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.openId != null">
                open_id = #{record.openId,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.nickName != null">
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.wxHeadurl != null">
                wx_headurl = #{record.wxHeadurl,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.unionid != null">
                unionid = #{record.unionid,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <delete id="deleteByExample" parameterType="com.soft.mapp.basecenter.domain.loginVo.UserQuery">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <select id="selectByuserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Expend_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER }
    </select>
    <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username,jdbcType=VARCHAR }
    </select>
    <select id="findByLoginWhere" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{userUniqueness,jdbcType=VARCHAR } or
              email=#{userUniqueness,jdbcType=VARCHAR } or
              telephone=#{userUniqueness,jdbcType=VARCHAR } or
              open_id=#{userUniqueness,jdbcType=VARCHAR }
    </select>
    <select id="findListByWhere" resultMap="BaseResultMap" parameterType="com.soft.mapp.basecenter.domain.loginVo.UserQuery">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Expend_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Expend_Column_List"/>
        from user
    </select>
    <select id="findByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user r
        where EXISTS (
        SELECT 1
        FROM user_role ur
        WHERE r.user_id=ur.user_id AND ur.role_id=#{roleId,jdbcType=INTEGER })
    </select>
</mapper>