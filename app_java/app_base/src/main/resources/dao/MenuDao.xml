<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soft.mapp.basecenter.dao.IMenuDao">
    <resultMap id="BaseResultMap" type="com.soft.mapp.basecenter.domain.loginVo.MenuDTO">
        <result column="menu_id" property="menuId" jdbcType="INTEGER"/>
        <result column="parent_menu_id" property="parentMenuId" jdbcType="INTEGER"/>
        <result column="menu_name" property="menuName" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="static_router" property="staticRouter" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="skip_url" property="skipUrl" jdbcType="VARCHAR"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <result column="is_out_url" property="isOutUrl" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!-- 用来记录分页查询时的所有数据量，避免出现分页查询时需要查询两次 -->
    <resultMap type="java.lang.Long" id="count1">
        <result column="total"/>
    </resultMap>
    <sql id="Base_Column_List">
        menu_id
        ,
    menu_name,
    parent_menu_id,
    type,
    static_router,
    remark,
    skip_url,
    order_num,
    is_out_url,
    icon,
    status,
    create_time
    </sql>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.noInfo">
                                    ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <select id="selectByExample" parameterType="com.soft.mapp.basecenter.domain.loginVo.MenuQuery"
            resultMap="BaseResultMap,count1">
        select
        <if test="distinct">
            distinct
        </if>
        SQL_CALC_FOUND_ROWS
        <include refid="Base_Column_List"/>
        from menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="pageNumAndPageSize != null">
            LIMIT ${pageNumAndPageSize}
        </if>
        ;
        SELECT count(1) AS total from menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>;
    </select>
    <insert id="insertSelective" parameterType="com.soft.mapp.basecenter.domain.loginVo.MenuDTO">
        <selectKey keyProperty="menuId" keyColumn="menu_id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="menuName != null">
                menu_name,
            </if>
            <if test="parentMenuId != null">
                parent_menu_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="skipUrl != null">
                skip_url,
            </if>
            <if test="staticRouter != null">
                static_router,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="isOutUrl != null">
                is_out_url,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            create_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="menuName != null">
                #{menuName,jdbcType=VARCHAR},
            </if>
            <if test="parentMenuId != null">
                #{parentMenuId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="skipUrl != null">
                #{skipUrl,jdbcType=VARCHAR},
            </if>
            <if test="staticRouter != null">
                #{staticRouter,jdbcType=VARCHAR},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="isOutUrl != null">
                #{isOutUrl,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            Now(),
        </trim>
    </insert>
    <update id="updateByExampleSelective" parameterType="map">
        update menu
        <set>
            <if test="record != null and record.menuName != null">
                menu_name = #{record.menuName,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.parentMenuId != null">
                parent_menu_id = #{record.parentMenuId,jdbcType=INTEGER},
            </if>
            <if test="record != null and record.type != null">
                `type` = #{record.type, jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.skipUrl != null">
                skip_url = #{record.skipUrl,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.isOutUrl != null">
                is_out_url = #{record.isOutUrl,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.icon != null">
                icon = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.staticRouter != null">
                static_router = #{record.staticRouter,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.orderNum != null">
                order_num = #{record.orderNum,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record != null and record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <delete id="deleteByExample" parameterType="com.soft.mapp.basecenter.domain.loginVo.MenuQuery">
        delete from menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <select id="findByMenuId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from menu
        where status='1' and menu_id = #{menuId,jdbcType=INTEGER } order by order_num
    </select>
    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from menu where status='1' order by order_num
    </select>
    <select id="findByLikeMenuName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from menu
        where status='1' and menu_name like #{menuName,jdbcType=INTEGER } order by order_num
    </select>
    <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        FROM menu
        WHERE EXISTS (
        SELECT 1
        FROM role r
         WHERE r.menu_ids LIKE CONCAT("%",if(LEFT(r.menu_ids,LENGTH(menu.menu_id))=menu.menu_id,'',','),menu.menu_id, '%')
         AND EXISTS (
        SELECT 1
        FROM user_role ur
        WHERE ur.role_id=r.role_id AND ur.user_id=#{userId,jdbcType=INTEGER })
        )
        order by order_num
    </select>
</mapper>